# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform.gitlab-ci.yml

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
services:
    - name: docker

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/infra_ci_test  # The relative path to the root directory of the Terraform project
  TF_STATE_NAME: ${TF_STATE_NAME:-default}  # The name of the state file used by the GitLab Managed Terraform state backend
  CI_CWM_CLIENTID: $CI_CWM_CLIENTID
  CI_CWM_SECRET: $CI_CWM_SECRET
  CI_CWM_TEST_PASSWORD: $CI_CWM_TEST_PASSWORD

before_script:
  - cd ${TF_ROOT}
  - terraform init
  - apk add gettext
  - envsubst < terraform.tfvars.tmpl > terraform.tfvars
stages:
  - validate
  - build
  - deploy
  - cleanup

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

fmt:
  stage: validate
  script:
    - terraform fmt -check -recursive
  allow_failure: true

validate:
  stage: validate
  script:
    - terraform validate

build:
  stage: build
  script:
    - terraform plan --out plan
  resource_group: ${TF_STATE_NAME}
  dependencies:
    - validate
  artifacts:
    paths:
      - ${TF_ROOT}/plan
    reports:
      terraform: ${TF_ROOT}/plan

deploy:
  stage: deploy
  script:
    - terraform apply --auto-approve -parallelism=50 plan 
  resource_group: ${TF_STATE_NAME}
  dependencies:
    - build
  artifacts:
    paths:
      - ${TF_ROOT}/terraform.tfstate
    reports:
        terraform: ${TF_ROOT}/terraform.tfstate
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      # when: manual

destroy:
  stage: cleanup
  script:
    - terraform destroy --auto-approve
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      # when: manual
