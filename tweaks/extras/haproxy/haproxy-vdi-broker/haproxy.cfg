# Global definitions apply to entire load balancer
global
  daemon
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  master-worker
  nbproc 1
  # 4 threads
  nbthread 4
  # mapped to the first 4 CPU cores
  cpu-map auto:1/1-4 0-3
  stats socket /var/run/admin.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  stats timeout 30s
  tune.ssl.default-dh-param 2048
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  log /dev/log local0
  log /dev/log local1 notice
  lua-load /etc/haproxy/ipchecker.lua
  tune.lua.session-timeout 30s
  ca-base /etc/ssl/certs
  crt-base /etc/letsencrypt/live/_domain_here_
# Defaults will be used in all cases unless overridden by specific frontend/backend definitions
defaults

	# Listen exclusively to http connections
	mode	http

	# Basic logging
	log	global
	log-format frontend:%f/%H/%fi:%fp\ client:%ci:%cp\ GMT:%T\ body:%[capture.req.hdr(0)]\ request:%r
	option dontlognull
	option log-separate-errors
	option dontlog-normal
	
	# Default connection timeouts (in milliseconds by default, other options detailed in docs)
    timeout connect 5000
    timeout client  50000ms
    timeout server  50s

	# Error files to display on common http errors
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# Web ui to see HAProxy stats
frontend stats

    # Access ui through uncommmon port with ssl certificate
	#  (certificates location is defined above in crt-base)
	bind *:8404 ssl crt CERT_GENERATED_NAME

	# Enable stats ui for this frontend
	stats enable
    # Access ui through this path 
	stats uri /stats
	# Refresh stats
		stats refresh 10s
    # Lock ui with username and password 
	stats auth USERPASS_PLACEHOLDER
    # Hide version of haproxy from ui
	stats hide-version


# Frontend that accepts requests from clients
frontend null.cloudwm.com
  bind 127.0.0.1:30080
  default_backend null_cloudwm


# Servers that fulfill the requests
backend null_cloudwm
  balance roundrobin
  option redispatch
  option log-health-checks
  option httpchk
  http-check connect port 443 ssl sni null.cloudwm.com
  http-check send meth GET uri /lbmanager.aspx ver HTTP/1.1 hdr host null.cloudwm.com
  http-check expect rstatus 200
  default-server inter 3s fall 3 rise 2
  cookie SERVERUSED indirect nocache insert
  # server null.cloudwm.com 63.250.56.143:443 check ssl verify none
  server null.cloudwm.com null.cloudwm.com:443 check ssl verify none


program api
  command dataplaneapi -f /etc/haproxy/dataplaneapi.hcl --update-map-files
  no option start-on-reload